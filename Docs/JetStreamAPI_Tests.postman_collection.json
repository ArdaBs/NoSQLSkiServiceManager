{
	"info": {
		"_postman_id": "208a602f-2eb0-42b0-8ff5-cecfb4181995",
		"name": "JetStreamAPI Tests",
		"description": "CRUD-Tests für die ServiceOrder API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29157576"
	},
	"item": [
		{
			"name": "Service Order",
			"item": [
				{
					"name": "Create ServiceOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response hat ID\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"serviceOrderId\", responseData.id);\r",
									"    console.log(\"Gespeicherte serviceOrderId:\", responseData.id);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CustomerName\": \"Max Mustermann\",\n    \"Email\": \"max.mustermann@example.com\",\n    \"PhoneNumber\": \"0123456789\",\n    \"CreationDate\": \"2024-02-01T00:00:00\",\n    \"Comments\": \"Bitte um sorgfältige Überprüfung der Bindungen.\",\n    \"ServiceTypeId\": \"1\",\n    \"PriorityId\": \"2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/ServiceOrder",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"ServiceOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All ServiceOrders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Antwort ist ein Array\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array');\r",
									"});\r",
									"\r",
									"pm.test(\"Array enthält Objekte\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    if (responseData.length > 0) {\r",
									"        pm.expect(responseData[0]).to.be.an('object').that.includes.keys('id', 'customerName', 'email');\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/ServiceOrder",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"ServiceOrder"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ServiceOrder by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response hat ID\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"id\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/ServiceOrder/{{serviceOrderId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"ServiceOrder",
								"{{serviceOrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ServiceOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"comments\": \"Kunde kann nur am Abend abholen kommen\",\n  \"status\": {\n    \"status\": \"Offen\",\n    \"description\": \"Arda muss den Kunden nach der Farbe fragen\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/ServiceOrder/{{serviceOrderId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"ServiceOrder",
								"{{serviceOrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ServiceOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200 oder 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"serviceOrderId\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/ServiceOrder/{{serviceOrderId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"ServiceOrder",
								"{{serviceOrderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "Create Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response hat ID\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"id\");\r",
									"    pm.collectionVariables.set(\"employeeId\", responseData.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response enthält Username\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"username\");\r",
									"    pm.collectionVariables.set(\"username\", responseData.username);\r",
									"\r",
									"    console.log(\"Gespeicherter Username:\", responseData.username);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"neuerMitarbeiter\",\n    \"password\": \"passwort123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200 bei erfolgreichem Login\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response enthält Token\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"token\");\r",
									"    pm.collectionVariables.set(\"authToken\", responseData.token);\r",
									"\r",
									"    console.log(\"Gespeicherter Token:\", responseData.token);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Arda\",\n  \"password\": \"1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee WrongPass 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"neuerMitarbeiter\",\n    \"password\": \"falsch\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee WrongPass 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"neuerMitarbeiter\",\n    \"password\": \"falsch\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Employee WrongPass 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"neuerMitarbeiter\",\n    \"password\": \"falsch\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Unlock Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"TestUser\",\n  \"password\": \"MeinPasswortIstSehrSicher\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/unlock/{{username}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"unlock",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Employees",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Antwort ist ein Array\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('array');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/Employee",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Antwort hat erwartete Struktur\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property(\"id\").that.equals(pm.collectionVariables.get(\"employeeId\"));\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/Employee/{{employeeId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"{{employeeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Rudolf\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:7095/api/Employee/{{employeeId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"{{employeeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuscode ist 200 oder 204\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.unset(\"employeeId\");\r",
									"pm.collectionVariables.unset(\"authToken\");\r",
									"pm.collectionVariables.unset(\"username\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:7095/api/Employee/{{employeeId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "7095",
							"path": [
								"api",
								"Employee",
								"{{employeeId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}